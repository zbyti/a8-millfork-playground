word SDMCTL @ $230
byte RTCLOK @ $14
byte i@$e0, j@$e2, k@$e4, count@$e6
pointer screen@$e8

asm void pause() {
	LDA RTCLOK
	rt_check:
	CMP RTCLOK
	BEQ rt_check
	RTS
}

void printScore() {
	const array(byte) dl = [
		$70,$70,$70,
		$42,0,$84,
		$41,0,0
	]
	array(byte) tmp[2]
	byte iter

	screen = $8400
	SDMCTL = dl.addr

	tmp[0] = count >> 4
	tmp[1] = count & %00001111

	for iter:tmp {
		if tmp[iter] < 10 {
			screen[iter] = tmp[iter] + $10
		} else {
			screen[iter] = tmp[iter] + $17
		}
	}
}

void drawBoard() {
	const array(byte) dl = [
		$70,$70,$70,
		$4f,$10,$60,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,$0f,$0f,$0f,$0f,
		$4f,0,$70,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,$0f,$0f,$0f,$0f,$0f,$0f,$0f,
		$0f,
		$41,0,0
	]

	screen = $6010
	SDMCTL = dl.addr

	for i,7,downto,0 {
		for j,23,downto,0 {
			for k,3,downto,0 {
				screen[0] = 255
				screen[1] = 255
				screen[2] = 255
				screen += 6
			}
			screen += 16
		}
		if (i & 1) == 0 {
			screen -= 3
		} else {
			screen += 3
		}
	}
}

void main() {
	count = 0

	pause()
	RTCLOK = 0

	while RTCLOK  < 150 {
		drawBoard()
		count += 1
	}

	printScore()

	while (true){}
}